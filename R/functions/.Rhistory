lat = 10
lng = 10
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=99&model=default", sep ="")
df <- readLines(url)
matrix(as.numeric(unlist(regmatches(df, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", df)))), ncol=2, byrow = TRUE)
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=99&model=default", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- data.frame(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=99&model=default", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat
dat <- data.frame(dat)
dat
colnames(dat) <- c("palaeolng", "palaeolat")
dat
palaeorotate <- function(lat, lng, time){
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=99&model=default", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 5)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 50)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 100)
palaeorotate <- function(lat, lng, time){
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=,", time, "&model=default", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 100)
palaeorotate <- function(lat, lng, time){
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=default", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 100)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 5)
palaeorotate <- function(lat, lng, time){
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=PALEOMAP", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 5)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 50)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 500)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 250)
palaeorotate <- function(lat, lng, time){
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=PALEOMAP", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 150)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 170)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 180)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 190)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 200)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 210)
palaeorotate <- function(lat, lng, time){
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=default", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 200)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 250)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 220)
#get palaeocoordinates
palaeorotate(lat = 20, lng = 20, time = 210)
#get palaeocoordinates
palaeorotate(lat = 40, lng = 20, time = 210)
#get palaeocoordinates
palaeorotate(lng = 40, lat = 20, time = 210)
#get palaeocoordinates
palaeorotate(lng = 40, lat = 20, time = 190)
palaeorotate <- function(lng, lat, time){
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=PALEOMAP", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lng = 40, lat = 20, time = 250)
palaeorotate <- function(lng, lat, time){
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=SETON2012", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lng = 40, lat = 20, time = 250)
palaeorotate <- function(lng, lat, time){
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=MULLER2016", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lng = 40, lat = 20, time = 250)
palaeorotate <- function(lng, lat, time){
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=MATTHEWS2016_pmag_ref", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lng = 40, lat = 20, time = 250)
palaeorotate <- function(lng, lat, time){
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=PALEOMAP", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lng = 40, lat = 20, time = 250)
#get palaeocoordinates
palaeorotate(lng = 0, lat = 20, time = 250)
#get palaeocoordinates
palaeorotate(lng = 0, lat = 10, time = 250)
#get palaeocoordinates
palaeorotate(lng = 0, lat = 19, time = 250)
#get palaeocoordinates
palaeorotate(lng = 0, lat = 45, time = 250)
#get palaeocoordinates
palaeorotate(lng = 5, lat = 45, time = 250)
lat = 45
lng = 5
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=PALEOMAP", sep ="")
time = 200
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=PALEOMAP", sep ="")
#pull data
dat <- readLines(url, warn = F)
time = 250
#create url for rotation
url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=PALEOMAP", sep ="")
#pull data
dat <- readLines(url, warn = F)
#get palaeocoordinates
palaeorotate(lng = 5, lat = 45, time = 250)
palaeorotate <- function(lng, lat, time){
#create url for rotation
#url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=PALEOMAP", sep ="")
url <- paste("http://portal.gplates.org/reconstruct/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=PALEOMAP", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lng = 5, lat = 45, time = 250)
#create url for rotation
#url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=PALEOMAP", sep ="")
url <- paste("http://portal.gplates.org/reconstruct/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, sep ="")
url
palaeorotate <- function(lng, lat, time){
#create url for rotation
#url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=PALEOMAP", sep ="")
url <- paste("http://gws.gplates.org//reconstruct/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lng = 5, lat = 45, time = 250)
#get palaeocoordinates
palaeorotate(lng = 5, lat = 45, time = 190)
#get palaeocoordinates
palaeorotate(lng = 5, lat = 45, time = 220)
install.packages("chronosphere")
?reconstruct
chronosphere::reconstruct(x = cbind(10, 10), age = 150)
chronosphere::reconstruct(x = cbind(10, 10), age = 200)
chronosphere::reconstruct(x = cbind(10, 10), age = 250)
functionBody(reconstruct)
functionBody(reconstruct)
function(reconstruct)
chronosphere::reconstruct(x = cbind(10, 10), age = 250)
palaeorotate(10, 10, 250)
coords = cbind(10,10)
age = 250
model = "PALEOMAP"
sprintf('?points=%s&time=%d&model=%s',gsub(" ", "", coords),age, model)
coords = cbind(10,10)
age = 250
model = "PALEOMAP"
url <- 'https://gws.gplates.org/reconstruct/reconstruct_points/'
query <- sprintf('?points=%s&time=%d&model=%s',gsub(" ", "", coords),age, model)
fullrequest <- sprintf(paste0(url,query, "&return_null_points"))
rawdata <- readLines(fullrequest, warn="F")
coords = cbind(10,10)
age = 250
model = "PALEOMAP"
coords = cbind(10,10)
coords <- toString(as.vector(t(coords)))
age = 250
model = "PALEOMAP"
url <- 'https://gws.gplates.org/reconstruct/reconstruct_points/'
query <- sprintf('?points=%s&time=%d&model=%s',gsub(" ", "", coords),age, model)
fullrequest <- sprintf(paste0(url,query, "&return_null_points"))
rawdata <- readLines(fullrequest, warn="F")
url
query
palaeorotate <- function(lng, lat, time){
#create url for rotation
#url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=PALEOMAP", sep ="")
url <- paste("http://gws.gplates.org//reconstruct/reconstruct_points/?points=", lng, ",", lat, "&time=", time, "&model=PALEOMAP", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lng = 5, lat = 45, time = 220)
#get palaeocoordinates
palaeorotate(lng = 5, lat = 45, time = 220)
palaeorotate <- function(lng, lat, time){
#create url for rotation
#url <- paste("http://portal.gplates.org/service/reconstruct_points/?points=", lng, ",%20", lat, "&time=", time, "&model=PALEOMAP", sep ="")
url <- paste("http://gws.gplates.org//reconstruct/reconstruct_points/?points=", lng, ",", lat, "&time=", time, "&model=PALEOMAP", sep ="")
#pull data
dat <- readLines(url, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lng = 5, lat = 45, time = 220)
#get palaeocoordinates
palaeorotate(lng = 5, lat = 45, time = 300)
palaeorotate <- function(lng, lat, time){
#create API for rotation
API <- paste("http://gws.gplates.org//reconstruct/reconstruct_points/?points=", lng, ",", lat, "&time=", time, "&model=PALEOMAP", sep ="")
#pull data
dat <- readLines(API, warn = F)
#format data
dat <- matrix(as.numeric(unlist(regmatches(dat, gregexpr("-?[[:digit:]]+\\.*[[:digit:]]+", dat)))), ncol=2, byrow = TRUE)
dat <- data.frame(dat)
colnames(dat) <- c("palaeolng", "palaeolat")
return(dat)
}
#get palaeocoordinates
palaeorotate(lng = 5, lat = 45, time = 300)
