#geom_line(data = data, mapping=aes(x = mid_ma, y = occupancy), colour = col[1], size = 1.1, alpha  = 0.75) +
scale_x_reverse(expand=c(0,0), limits = c(541, 0)) +
scale_y_continuous(expand=c(0,0), limits = c(-7, 85)) +
labs(x = "", y = expression(bold(paste("Occuppied equal- \n  area grid cells")))) +
theme(panel.background = element_rect(colour = "white", fill = "white"),
plot.margin = margin(0.5,1,0.5,1, "cm"),
#panel.grid.minor.y = element_line(colour = "grey90"),
#panel.grid.minor.x = element_line(colour = "grey90"),
#panel.grid.major.y = element_line(colour = "grey90"),
#panel.grid.major.x = element_line(colour = "grey90"),
legend.position = c(0.2, 0.9),
legend.background = element_blank(),
legend.box.background = element_rect(colour = NA, fill = NA),
legend.key = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.margin=unit(0, "cm"),
panel.border = element_rect(colour = "black", fill = NA),
axis.text.x = element_text(size = 14, angle = 0, hjust = 0.5),
axis.text.y = element_text(size = 14, angle = 0, hjust = 1),
axis.title.y = element_text(size = 16, face = "bold", vjust = 4),
axis.title.y.right = element_text(size = 14, face = "bold", vjust = 4),
axis.title.x = element_text(size = 16, face = "bold", vjust = -1),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
aspect.ratio = 0.5)
plot_b
#---------------------------------
plot_c <- ggplot() +
#geom_segment(data = periods, mapping=aes(x = min_ma, xend = min_ma, y = -3000, yend = Inf), linetype = 2, size = 1, color = "grey90") +
#geom_segment(data = periods, mapping=aes(x = max_ma, xend = max_ma, y = -3000, yend = Inf), linetype = 2, size = 1, color = "grey90") +
geom_rect(data = throwing_shade, mapping=aes(xmin=min_ma, xmax=max_ma, ymin = -5, ymax= Inf), linetype = 0, color="grey90", alpha=0.1)  +
#geom_rect(data = periods, mapping=aes(xmin=300, xmax=0, ymin= -2600, ymax= 0), linetype = 1, colour = "black", fill="black", alpha=1)  +
geom_rect(data = periods, mapping=aes(xmin = min_ma, xmax = max_ma, ymin = -5, ymax = 0), linetype = 1, colour = "black", fill=periods$color, alpha=1)  +
geom_text(data = periods, mapping=aes(x = mid_ma, y = -2.5, label = abbrev), size = 4, colour = "black", alpha=1)  +
geom_line(data = data, mapping=aes(x = mid_ma, y = MST), colour = col[1], size = 1.1, alpha  = 0.75) +
geom_point(data = data, mapping=aes(x = mid_ma, y = MST), colour = col[1], size = 2, alpha  = 0.75) +
scale_x_reverse(expand=c(0,0), limits = c(541, 0)) +
scale_y_continuous(expand=c(0,0), limits = c(-5, 60)) +
labs(x = "Time (Ma)", y = expression(bold(paste("Summed MST length \n  (thousands of km)")))) +
theme(panel.background = element_rect(colour = "white", fill = "white"),
plot.margin = margin(0.5,1,0.5,1, "cm"),
#panel.grid.minor.y = element_line(colour = "grey90"),
#panel.grid.minor.x = element_line(colour = "grey90"),
#panel.grid.major.y = element_line(colour = "grey90"),
#panel.grid.major.x = element_line(colour = "grey90"),
legend.position = c(0.2, 0.9),
legend.background = element_blank(),
legend.box.background = element_rect(colour = NA, fill = NA),
legend.key = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.margin=unit(0, "cm"),
panel.border = element_rect(colour = "black", fill = NA),
axis.text.x = element_text(size = 14, angle = 0, hjust = 0.5),
axis.text.y = element_text(size = 14, angle = 0, hjust = 1),
axis.title.y = element_text(size = 16, face = "bold", vjust = 4),
axis.title.y.right = element_text(size = 14, face = "bold", vjust = 4),
axis.title.x = element_text(size = 16, face = "bold", vjust = -1),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
aspect.ratio = 0.5)
plot_c
#---------------------------------
plots <- ggarrange(plot_a, plot_b, plot_c, ncol=1, nrow=3, widths = c(1,1,1), labels = "AUTO", align = "v", font.label = list(size = 20))
#plots
ggsave(file = "./figures/spatial_stats.png", plot = plots, width = 117, height = 180, units = "mm", dpi = 600, scale = 1.6)
#unlink("./figures/spatial_stats.png")
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
world
world
name_long
world[world$name_long == df$Location[i], 0]
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
country
plot*country
plot(country)
country
df$Location[i],
df$Location[i]
df$Location[i]
country <- world[world$name_long == df$Location[i], 0]
country <- world[world$name_long == df$Location[i], 0]
country <- world[world$name_long == df$Location[i], 0]
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
i <- 22
country <- world[world$name_long == df$Location[i], 0]
world$name_long
data <- read.csv("./data/Cleaned_Veizer_19_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
i
plot(country)
df$Location[i]
plot(world)
plot(world$continent)
plot(world)
country <- world[world$name_long == df$Location[i], 0]
spsample(country, n = 1, "random")
library(sp)
spsample(country, n = 1, "random")
?spsample
country
SpatialPolygons(country)
test <- as_Spatial(country)
spsample(test, n = 1, "random")
country <- as_Spatial(country)
spsample(country, n = 1, "random")
spsample(country, n = 1, "random", pretty = TRUE)
spsample(country, n = 100, "random", pretty = TRUE)
test <- spsample(country, n = 100, "random", pretty = TRUE)
test
st_coordinates(test)
as.data.frame(test)
as.data.frame(spsample(country, n = 100, "random", pretty = TRUE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
plot(country)
i <- 9
country <- world[world$name_long == df$Location[i], 0]
df$Location[i]
country <- as_Spatial(country)
test <- as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
test
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
#random assignment
library(sf)
library(spData)
library(dplyr)
library(sp)
data <- read.csv("./data/Cleaned_Veizer_19_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
country <- as_Spatial(country)
rpoints <- as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
rpoints
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
#df$lon[i] <- as.numeric(rpoints[1,"X"])
#df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- as_Spatial(country)
rpoints <- as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
df$lon[i] <- as.numeric(rpoints[1,"x"])
df$lat[i] <- as.numeric(rpoints[1,"y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
#df$lon[i] <- as.numeric(rpoints[1,"X"])
#df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- as_Spatial(country)
rpoints <- as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
df$lon[i] <- as.numeric(rpoints[1,"x"])
df$lat[i] <- as.numeric(rpoints[1,"y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
#df$lon[i] <- as.numeric(rpoints[1,"X"])
#df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- as_Spatial(country)
rpoints <- as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
df$lon[i] <- as.numeric(rpoints[1,"x"])
df$lat[i] <- as.numeric(rpoints[1,"y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
#df$lon[i] <- as.numeric(rpoints[1,"X"])
#df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- as_Spatial(country)
rpoints <- as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
df$lon[i] <- as.numeric(rpoints[1,"x"])
df$lat[i] <- as.numeric(rpoints[1,"y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
#df$lon[i] <- as.numeric(rpoints[1,"X"])
#df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- as_Spatial(country)
rpoints <- as.data.frame(spsample(country, n = 100, "random", pretty = FALSE))
df$lon[i] <- as.numeric(rpoints[1,"x"])
df$lat[i] <- as.numeric(rpoints[1,"y"])
}
warnings*()
warnings()
?spsample
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
#df$lon[i] <- as.numeric(rpoints[1,"X"])
#df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- as_Spatial(country)
rpoints <- as.data.frame(suppressWarnings(spsample(country, n = 100, "random", pretty = FALSE)))
df$lon[i] <- as.numeric(rpoints[1,"x"])
df$lat[i] <- as.numeric(rpoints[1,"y"])
}
View(df)
View(df)
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
#df$lon[i] <- as.numeric(rpoints[1,"X"])
#df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- as_Spatial(country)
rpoints <- as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
df$lon[i] <- as.numeric(rpoints[1,"x"])
df$lat[i] <- as.numeric(rpoints[1,"y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
#df$lon[i] <- as.numeric(rpoints[1,"X"])
#df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- as_Spatial(country)
rpoints <- as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
df$lon[i] <- as.numeric(rpoints[1,"x"])
df$lat[i] <- as.numeric(rpoints[1,"y"])
}
#random assignment
library(sf)
library(spData)
library(dplyr)
library(sp)
data <- read.csv("./data/Cleaned_Veizer_19_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
#df$lon[i] <- as.numeric(rpoints[1,"X"])
#df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- as_Spatial(country)
rpoints <- as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
df$lon[i] <- as.numeric(rpoints[1,"x"])
df$lat[i] <- as.numeric(rpoints[1,"y"])
}
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
#df$lon[i] <- as.numeric(rpoints[1,"X"])
#df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- as_Spatial(country)
rpoints <- as.data.frame(suppressWarnings(spsample(country, n = 100, "random", pretty = FALSE)))
df$lon[i] <- as.numeric(rpoints[1,"x"])
df$lat[i] <- as.numeric(rpoints[1,"y"])
}
suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE))
as.vector(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
rpoints <- as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
df$lon[i] <- as.numeric(rpoints[1,"x"])
df$lat[i] <- as.numeric(rpoints[1,"y"])
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
#df$lon[i] <- as.numeric(rpoints[1,"X"])
#df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- as_Spatial(country)
rpoints <- as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
df$lon[i] <- as.numeric(rpoints[1,"x"])
df$lat[i] <- as.numeric(rpoints[1,"y"])
}
#random assignment
library(sf)
library(spData)
library(dplyr)
library(sp)
data <- read.csv("./data/Cleaned_Veizer_19_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
#df$lon[i] <- as.numeric(rpoints[1,"X"])
#df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- as_Spatial(country)
rpoints <- as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
df$lon[i] <- as.numeric(rpoints[1,"x"])
df$lat[i] <- as.numeric(rpoints[1,"y"])
}
as.numeric(rpoints[1,"x"])
rpoints
rpoints <- as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
rpoints
rpoints <- as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
rpoints
as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
data <- read.csv("./data/Cleaned_Veizer_19_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
#rpoints <- st_coordinates(st_sample(country, size = 100, type = "random", exact = TRUE, by_polygon = TRUE))
#df$lon[i] <- as.numeric(rpoints[1,"X"])
#df$lat[i] <- as.numeric(rpoints[1,"Y"])
country <- as_Spatial(country)
rpoints <- as.data.frame(suppressWarnings(spsample(country, n = 1, "random", pretty = FALSE)))
df$lon[i] <- as.numeric(rpoints[1,1])
df$lat[i] <- as.numeric(rpoints[1,2])
}
df
data <- read.csv("./data/Cleaned_Veizer_19_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df
