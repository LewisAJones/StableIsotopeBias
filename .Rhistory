df$lon <- rpoints[,"X"]
df$lat <- rpoints[,"Y"]
}
country
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE))
df$lon <- rpoints[,"X"]
df$lat <- rpoints[,"Y"]
}
rpoints
rpoints <- st_coordinates(st_sample(country, size = 1, type = "regular", by_polygon = TRUE))
rpoints
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "regular", by_polygon = TRUE))
df$lon <- rpoints[,"X"]
df$lat <- rpoints[,"Y"]
}
rpoints
st_sample(country, size = 1, type = "regular", by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE)
?while
?while()
nrow(rpoints)
country <- world[world$name_long == df$Location[i], 0]
while(nrow(rpoints == 0)){rpoints <- st_coordinates(st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE))}
nrow(rpoints == 0)
country <- world[world$name_long == df$Location[i], 0]
while(nrow(rpoints == 0)){rpoints <- st_coordinates(st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE))}
rpoints <- st_coordinates(st_sample(country, size = 1, type = "regular", exact = TRUE, by_polygon = TRUE))
rpoints
spsample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE)
library(sp)
spsample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE)
spsample(country, size = 1, type = "random")
?st_sample
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon <- rpoints[,"X"]
df$lat <- rpoints[,"Y"]
}
df$Location[i]
country <- world[world$name_long == df$Location[i], 0]
country
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon <- rpoints[,"X"]
df$lat <- rpoints[,"Y"]
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon <- rpoints[,"X"]
df$lat <- rpoints[,"Y"]
}
i
country
rpoints
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon <- rpoints[,"X"]
df$lat <- rpoints[,"Y"]
}
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon <- rpoints[,"X"]
df$lat <- rpoints[,"Y"]
}
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon <- rpoints[,"X"]
df$lat <- rpoints[,"Y"]
}
df
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- rpoints[,"X"]
df$lat[i] <- rpoints[,"Y"]
}
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- rpoints[,"X"]
df$lat[i] <- rpoints[,"Y"]
}
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- rpoints[,"X"]
df$lat[i] <- rpoints[,"Y"]
}
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- rpoints[,"X"]
df$lat[i] <- rpoints[,"Y"]
}
df$lon[i
df$lon[i]
rpoints[,"X"]
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numneric(rpoints[,"X"])
df$lat[i] <- as.numeric(rpoints[,"Y"])
}
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numneic(rpoints[,"X"])
df$lat[i] <- as.numeric(rpoints[,"Y"])
}
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[,"X"])
df$lat[i] <- as.numeric(rpoints[,"Y"])
}
as.numeric(rpoints[,"X"])
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- rpoints[1,"X"]
df$lat[i] <- rpoints[1,"Y"]
}
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
rpoints[1,"X"]
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
as.numeric(rpoints[1,"X"])
as.numeric(rpoints[1,"Y"])
country
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
df
?left_join
left_join(x = data, y = df, by = c("Location" == "Location", "literature" == "literature"))
left_join(x = data, y = df, by = list("Location" == "Location", "literature" == "literature"))
list("Location" == "Location", "literature" == "literature")
left_join(x = data, y = df, by = c("Location" = "Location", "literature" = "literature"))
left_join(x = data, y = df, by = c("Location" = "Location", "literature" = "literature"), copy = TRUE)
left_join(x = data, y = df, by = c("Location" = "Location", "literature" = "literature"), keep = FALSE)
test <- left_join(x = data, y = df, by = c("Location" = "Location", "literature" = "literature"), copy = TRUE, keep = FALSE)
View(test)
View(data)
?replace
dplyr::recode()
?recode
i <- 1
which(data$literature == df$literature[i] & data$Location == df$Location[i])
df[i, c("lon","lat")]
data[vec,c("lon", "lat")]
vec <- which(data$literature == df$literature[i] & data$Location == df$Location[i])
data[vec,c("lon", "lat")]
for(i in 1:nrow(df)){
vec <- which(data$literature == df$literature[i] & data$Location == df$Location[i])
data[vec,c("lon", "lat")] <- df[i, c("lon","lat")]
}
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
for(i in 1:nrow(df)){
vec <- which(data$literature == df$literature[i] & data$Location == df$Location[i])
data[vec,c("lon", "lat")] <- df[i, c("lon","lat")]
}
#random assignment
library(sf)
library(spData)
library(dplyr)
data <- read.csv("./data/Cleaned_Veizer_15_02_2021.csv")
df <- subset(data, comments == "Random assignment")
df <- df[,c("literature", "Location")]
df <- unique(df)
df$lon <- NA
df$lat <- NA
for(i in 1:nrow(df)){
country <- world[world$name_long == df$Location[i], 0]
rpoints <- st_coordinates(st_sample(country, size = 1, type = "random", exact = TRUE, by_polygon = TRUE))
df$lon[i] <- as.numeric(rpoints[1,"X"])
df$lat[i] <- as.numeric(rpoints[1,"Y"])
}
for(i in 1:nrow(df)){
vec <- which(data$literature == df$literature[i] & data$Location == df$Location[i])
data[vec,c("lon", "lat")] <- df[i, c("lon","lat")]
}
beepr::beep(2)
write.csv(data, "./data/Cleaned_Veizer_19_02_2021.csv")
beepr::beep(2)
data <- subset(data, comments == "Random assignment")
View(data)
#data prep and clean
######################
#load libraries and functions
library(dplyr)
library(pbapply)
library(chronosphere)
#source("./R/functions/palaeorotate.R")
source("./R/functions/calculate_T.R")
######################
#load data
data <- read.csv("./data/Cleaned_Veizer_19_02_2021.csv")
#remove data without coordinates
data <- subset(data, !is.na(lat) & !is.na(lon))
#calculate temperate
data <- subset(data, !is.na(d18O))
data$temperature <- sapply(1:nrow(data), function(x)
calculate_T(d = data$d18O[x], t = data$gts2012[x], mineral = "calcite",
carbonate_equation = "Veizer trend", apatite_equation = "trend"))
#round age of data
data$rounded_age <- round(data$gts2012)
#palaeorotate coordinates
pm <- fetch("paleomap", "model", datadir="./data/") #download plate model
uniq <- unique(data[,c("lon", "lat", "rounded_age")])
rotations <- data.frame(t(pbsapply(1:nrow(uniq), function(i) {
#coords <- palaeorotate(lng = uniq$lon[i], lat = uniq$lat[i], age = uniq$rounded_age[i])
coords <-   reconstruct(x = uniq[i, c("lon", "lat")], #coordinates of data
age = uniq$rounded_age[i], #age of data
model=pm, #plate model
dir = "./data/", #directory of plate model
path.gplates="C:/Program Files (x86)/GPlates/GPlates 2.2.0/gplates-2.2.0.exe",
cleanup = TRUE,
verbose = FALSE)
files <- list.files("./data/", full.names = TRUE)
files <- files[files != c("./data/Cleaned_Veizer_15_02_2021.csv")]
files <- files[files != c("./data/stage_bins.csv")]
do.call(file.remove, list(files))
coords <- round(coords, digits = 2)
coords
}, simplify = TRUE)))
colnames(rotations) <- c("palaeolng", "palaeolat")
rotations <- cbind.data.frame(uniq, rotations)
data <- plyr::join(x = data, y = rotations, type = "full", by = c("lon" = "lon", "lat" = "lat", "rounded_age" = "rounded_age"), match = "all")
stages <- read.csv("./data/stage_bins.csv")
data$mid_ma <- NA
for(i in 1:nrow(stages)){
vec <- which(data$gts2012 <= stages$max_ma[i] & data$gts2012 >= stages$min_ma[i])
data$mid_ma[vec] <- stages$mid_ma[i]
}
data <- plyr::join(x = data, y = stages, type = "full", by = c("mid_ma"), match = "all")
write.csv(data, "./data/rotated_Veizer_data.csv", row.names = FALSE)
